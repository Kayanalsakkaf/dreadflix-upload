stages:
  - build
  - test
  - deploy
  
variables:  # This defines global variables for your pipeline
  EKS_CLUSTER: "funny-metal-potato"
  DEPLOYMENT: "deployment/upload-service-deployment"
  CONTAINER: "upload-service"
  NAME_SPACE: "default"

build-job:
  stage: build
  image: amazon/aws-cli:latest
  script:
    - echo "Compiling the code..."
    - aws eks update-kubeconfig --name $EKS_CLUSTER
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 961341555113.dkr.ecr.us-east-1.amazonaws.com
    - REPOSITORY_URI=961341555113.dkr.ecr.us-east-1.amazonaws.com/upload-service
    - IMAGE_TAG=build-$CI_COMMIT_SHORT_SHA
    - docker build -t $REPOSITORY_URI:latest .
    - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    - echo "Build completed."

unit-test-job:
  stage: test
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:
  stage: test
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - docker push $REPOSITORY_URI --all-tags
    - echo "Update Kube Config"
    - aws eks update-kubeconfig --region us-east-1 --name $EKS_CLUSTER  # Use us-east-1
    - kubectl set image deployment/$DEPLOYMENT $CONTAINER=$REPOSITORY_URI:$IMAGE_TAG -n $NAME_SPACE  # Use IMAGE_TAG
    - echo "Application successfully deployed."