variables:
  AWS_REPO: ${REGISTRY_IMAGE}/upload-service #change accordingly
  #DOCKER_HOST: tcp://docker:3001
  CLUSTER_NAME: funny-metal-potato
  TAG: latest
stages:
  - build
  - test
  - deploy app

#1.0 - Building the docker image and pushing it to AWS ECR Registry
build:
  stage: build
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - aws ecr get-login-password | docker login --username AWS --password-stdin 961341555113.dkr.ecr.us-east-1.amazonaws.com #account name is AccountnameDREAD?
  allow_failure: true

#2.0 - Testing the service
unit-test-job:
  stage: test
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 10
    - echo "Code coverage is 90%"
  allow_failure: true

lint-test-job:
  stage: test
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."
  allow_failure: true

#3.0 - Deploying the Golang service on AWS-EKS
deploy app on EKS:
  stage: deploy app
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  script:
    - echo 'Deployment Successful!'
  allow_failure: true