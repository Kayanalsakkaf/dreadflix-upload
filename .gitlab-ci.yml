stages:
  - build
  - test
  - deploy

variables:
  EKS_CLUSTER: "funny-metal-potato"  # Replace with your EKS cluster name
  DEPLOYMENT: "deployment/upload-service-deployment"
  CONTAINER: "upload-service"
  NAME_SPACE: "default"
  REGION: "us-east-1"  # Replace with your AWS region

build_job:
  stage: build
  image: amazon/aws-cli:latest
  script:
    - set -x  # Enable verbose logging for debugging
    - echo "Building the Docker image..."
    - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
    - echo "ECR login complete."
    - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/upload-service
    - IMAGE_TAG=build-$CI_COMMIT_SHORT_SHA
    - docker build -t $REPOSITORY_URI:latest .
    - echo "build complete."
    - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
    - docker push $REPOSITORY_URI:$IMAGE_TAG
    - echo "Docker image built and pushed successfully."

unit-test-job:
  stage: test
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:
  stage: test
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy_job:
  stage: deploy
  image: amazon/aws-cli:latest
  script:
    - echo "Deploying to EKS..."
    - aws eks update-kubeconfig --name $EKS_CLUSTER --region $REGION 
    - kubectl set image deployment/$DEPLOYMENT $CONTAINER=$REPOSITORY_URI:$IMAGE_TAG -n $NAME_SPACE  # Use IMAGE_TAG
    - echo "Application successfully deployed."